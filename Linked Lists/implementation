##LINKED LIST -

# 1. Creating a single node.
class Node:
  def __init__(self, data, next=None):
    self.data = data
    self.next = next

if __name__ == "__main__":
  first = Node(3)
  print(first.data)

# 2. Join multiple single nodes

class LinkedList():
  def __init__(self):
    self.head = None
  
  def insert_at_beginning(self, new_data):
    new_node = Node(new_data)
    new_node.next = self.head
    self.head = new_node

  def insert_after(self, prev_node, new_data):
    if prev_node is None:
      print("The givem previousj  node must be in LinkedList.")
      return
    
    new_node = Node(new_data)
    new_node.next = prev_node.next
    prev_node.next = new_node
  
  def insert_at_end(self, new_data):
    new_node = Node(new_data)
    
    if self.head is None:
      self.head = new_node
      return
    
    last = self.head
    while (last.next):
      last = last.next

    last.next = new_node

  def deletenode(self, position):
    if self.head is None:
      return
    temp = self.head

    if position == 0:
      self.head = temp.next
      temp = None
      return
    
    for i in range(position - 1):
      temp = temp.next
      if temp is None:
        break
    
    if temp is None:
      return
    if temp.next is None:
      return
    
    next = temp.next.next
    temp.next = None
    temp.next = next
    
  def search(self, key):
    current = self.head
    while current is not None:
      if current.data == key:
        return True

      current = current.next

    return False
  # sorting linked list using bubble sort algorithm.
  def sortLinkedList(self, head):
    current = head
    index = Node(None)

    if head is None:
      return
    else:
      while current is not None:
        index = current.next

        while index is not None:
          if current.data > index.data:
            current.data, index.data = index.data, current.data
          
          index = index.next
        current = current.next


  #printing Linked List
  def printList(self):
    temp = self.head
    while(temp):
      print(str(temp.data) + " ", end="")

if __name__ == "__main__":
  llist = LinkedList()
  llist.insert_at_end(1)
  llist.insert_at_beginning(2)
  llist.insert_after(llist.head.next, 3)

  llist.printList()


"""
class LinkedList:
  def __init__(self):
    self.head = None

  #insert elements in the linked list.
  def insert(self, data):
    newNode = Node(data)
    if (self.head):
      current = self.head
      while (current.next):
        current = current.next
      current.next = newNode
    else:
      self.head = newNode

  def printLinkedList(self):
    current = self.head
    while(current):
      print(current.data)
      current = current.next


if __name__ == "__main__":
  LL = LinkedList()
  LL.head = Node(3)
  print(LL.head.data)
  LinkedList = LinkedList()
  LinkedList.insert(4)
  LinkedList.insert(5)
  LinkedList.insert(7)
  LinkedList.printLinkedList()
"""
